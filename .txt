

      // 1. ast
      const data = fs.readFileSync(this.filePath, "utf8");
      const ast = acorn.parse(data, { ecmaVersion: 2023 });

      // 2. ast format (js)
      const astFormat = escodegen.generate(ast, {
        format: {
          indent: {
            style: "  ",
            base: 0,
            adjustMultilineComment: false
          },
          newline: "\n",
          space: " ",
          json: false,
          renumber: false,
          hexadecimal: false,
          quotes: "double",
          escapeless: false,
          compact: false,
          parentheses: true,
          semicolons: true,
          safeConcatenation: false
        }
      });

      // 3. 들여쓰기 변경
      const updateContent = astFormat
        .split("\n")
        .map(line => {
          const indentMatch = line.match(/^(\s+)/);
          if (indentMatch) {
            const spaces = indentMatch[1].length;
            const newIndent = Math.ceil(spaces / 2) * 2;
            return line.replace(/^(\s+)/, " ".repeat(newIndent));
          }
          return line;
        }).join("\n");

      fs.writeFileSync(this.copyPath, updateContent, "utf8");
      return updateContent;
    }
    catch (err) {
      return new Error();
    }